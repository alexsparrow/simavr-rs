/* automatically generated by rust-bindgen */

#[derive(Clone, Copy)]
#[repr(u32)]
pub enum IOPPort {
    IOPORT_IRQ_PIN0 = 0,
    IOPORT_IRQ_PIN1 = 1,
    IOPORT_IRQ_PIN2 = 2,
    IOPORT_IRQ_PIN3 = 3,
    IOPORT_IRQ_PIN4 = 4,
    IOPORT_IRQ_PIN5 = 5,
    IOPORT_IRQ_PIN6 = 6,
    IOPORT_IRQ_PIN7 = 7,
    IOPORT_IRQ_PIN_ALL = 8,
    IOPORT_IRQ_DIRECTION_ALL = 9,
    IOPORT_IRQ_REG_PORT = 10,
    IOPORT_IRQ_REG_PIN = 11,
    IOPORT_IRQ_COUNT = 12,
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_avr_ioport_getirq_t {
    pub bit: avr_regbit_t,
    pub irq: [*mut avr_irq_t; 8usize],
}
impl ::std::clone::Clone for Struct_avr_ioport_getirq_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_avr_ioport_getirq_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type avr_ioport_getirq_t = Struct_avr_ioport_getirq_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_avr_ioport_state_t {
    pub _bindgen_bitfield_1_: ::std::os::raw::c_ulong,
}
impl ::std::clone::Clone for Struct_avr_ioport_state_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_avr_ioport_state_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type avr_ioport_state_t = Struct_avr_ioport_state_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_avr_ioport_external_t {
    pub _bindgen_bitfield_1_: ::std::os::raw::c_ulong,
}
impl ::std::clone::Clone for Struct_avr_ioport_external_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_avr_ioport_external_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type avr_ioport_external_t = Struct_avr_ioport_external_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_avr_iopin_t {
    pub _bindgen_bitfield_1_: uint16_t,
    pub _bindgen_bitfield_2_: uint16_t,
}
impl ::std::clone::Clone for Struct_avr_iopin_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_avr_iopin_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type avr_iopin_t = Struct_avr_iopin_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_avr_ioport_t {
    pub io: avr_io_t,
    pub name: ::std::os::raw::c_char,
    pub r_port: avr_io_addr_t,
    pub r_ddr: avr_io_addr_t,
    pub r_pin: avr_io_addr_t,
    pub pcint: avr_int_vector_t,
    pub r_pcint: avr_io_addr_t,
    pub external: Struct_Unnamed2,
}
impl ::std::clone::Clone for Struct_avr_ioport_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_avr_ioport_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_Unnamed2 {
    pub pull_mask: uint8_t,
    pub pull_value: uint8_t,
}
impl ::std::clone::Clone for Struct_Unnamed2 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_Unnamed2 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type avr_ioport_t = Struct_avr_ioport_t;
#[link(name = "simavr")]
extern "C" {
    pub fn avr_ioport_init(avr: *mut avr_t, port: *mut avr_ioport_t);
}

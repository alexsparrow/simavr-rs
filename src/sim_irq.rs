use stdint::*;
/* automatically generated by rust-bindgen */

pub type avr_irq_notify_t =
    ::std::option::Option<unsafe extern "C" fn(irq: *mut Struct_avr_irq_t,
                                               value: uint32_t,
                                               param:
                                                   *mut ::std::os::raw::c_void)>;
#[derive(Clone, Copy)]
#[repr(u32)]
pub enum Enum_Unnamed1 {
    IRQ_FLAG_NOT = 1,
    IRQ_FLAG_FILTERED = 2,
    IRQ_FLAG_ALLOC = 4,
    IRQ_FLAG_INIT = 8,
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_avr_irq_pool_t {
    pub count: ::std::os::raw::c_int,
    pub irq: *mut *mut Struct_avr_irq_t,
}
impl ::std::clone::Clone for Struct_avr_irq_pool_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_avr_irq_pool_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type avr_irq_pool_t = Struct_avr_irq_pool_t;
pub enum Struct_avr_irq_hook_t { }
#[repr(C)]
#[derive(Copy)]
pub struct Struct_avr_irq_t {
    pub pool: *mut Struct_avr_irq_pool_t,
    pub name: *const ::std::os::raw::c_char,
    pub irq: uint32_t,
    pub value: uint32_t,
    pub flags: uint8_t,
    pub hook: *mut Struct_avr_irq_hook_t,
}
impl ::std::clone::Clone for Struct_avr_irq_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_avr_irq_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type avr_irq_t = Struct_avr_irq_t;
#[link(name = "simavr")]
extern "C" {
    pub fn avr_alloc_irq(pool: *mut avr_irq_pool_t, base: uint32_t,
                         count: uint32_t,
                         names: *mut *const ::std::os::raw::c_char)
     -> *mut avr_irq_t;
    pub fn avr_free_irq(irq: *mut avr_irq_t, count: uint32_t);
    pub fn avr_init_irq(pool: *mut avr_irq_pool_t, irq: *mut avr_irq_t,
                        base: uint32_t, count: uint32_t,
                        names: *mut *const ::std::os::raw::c_char);
    pub fn avr_raise_irq(irq: *mut avr_irq_t, value: uint32_t);
    pub fn avr_connect_irq(src: *mut avr_irq_t, dst: *mut avr_irq_t);
    pub fn avr_unconnect_irq(src: *mut avr_irq_t, dst: *mut avr_irq_t);
    pub fn avr_irq_register_notify(irq: *mut avr_irq_t,
                                   notify: avr_irq_notify_t,
                                   param: *mut ::std::os::raw::c_void);
    pub fn avr_irq_unregister_notify(irq: *mut avr_irq_t,
                                     notify: avr_irq_notify_t,
                                     param: *mut ::std::os::raw::c_void);
}
